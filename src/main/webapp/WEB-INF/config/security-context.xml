<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<!-- enable Method level [vs URL level] authorization This work for APPLICATION 
		Level scanned components Does NOT recognize WEB level components - for THAT 
		need to place enable line in servlet-context -->
	<security:global-method-security
		pre-post-annotations="enabled" />

	<!-- security:http enables security filter mechanism...name space configuration 
		is activated -->
	<!-- use-expressions enables URL level authorization -->
	<security:http pattern="/login" security="none" />

	<security:http use-expressions="true">
		<!-- can Use ControllerAdice instead -->
		<!--security:access-denied-handler error-page="/error-forbidden" / -->
		<!-- Implemented with Web based URL - Controller "METHOD" level authorization -->
		<!-- the more specific rules need to come first, followed by the more general 
			ones. -->
		<!-- Comment out the following to see @Service METHOD level authorization -->
		<security:intercept-url pattern="/admin/**"
			access="hasRole('ROLE_ADMIN')" />

		<!-- always-use-default-target overrides where login was triggered -->
		<!-- logout-url renames j_security_logout URL -->
		<!-- similarly username,password,Login-processing renames j_security_* 
			stuff -->
		<!-- e.g., /j_spring_security_check is default login-processing-url -->
		<!-- Comment out login-page through logoinfailed for BASIC -->
		<security:form-login login-page="/login"
			username-parameter="username" password-parameter="password"
			authentication-failure-url="/login/failed" default-target-url="/admin/entries"
			always-use-default-target="true" />
		<security:logout logout-success-url="/"
			logout-url="/j_spring_security_logout" />

		<!-- BY DEFAULT the URL /j_spring_security_logout triggers logout NOTE: 
			is it JUST a URL naming convention - no mapping is required logout-url= "/doLogout" 
			REPLACES it -->

		<security:access-denied-handler
			error-page="/errors/403.html" />
	</security:http>


	<security:authentication-manager>
		<security:authentication-provider>
			<security:password-encoder hash="bcrypt" />
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="SELECT USERNAME, PASSWORD, ENABLED FROM User WHERE USERNAME=?"
				authorities-by-username-query="SELECT u.USERNAME, a.AUTHORITY FROM User u, AUTHORITY a WHERE u.USERNAME = a.USERNAME AND u.USERNAME=?" />
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
